import { useState, useEffect } from 'react'
import { Button } from "/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "/components/ui/card"
import { Heart, ArrowRight, X } from "lucide-react"

const quotes = [
  "The greatest glory in living lies not in never falling, but in rising every time we fall. - Nelson Mandela",
  "The way to get started is to quit talking and begin doing. - Walt Disney",
  "Your time is limited, so don't waste it living someone else's life. - Steve Jobs",
  "If life were predictable it would cease to be life, and be without flavor. - Eleanor Roosevelt",
  "If you look at what you have in life, you'll always have more. - Oprah Winfrey",
  "Life is what happens when you're busy making other plans. - John Lennon",
  "Spread love everywhere you go. Let no one ever come to you without leaving happier. - Mother Teresa",
  "When you reach the end of your rope, tie a knot in it and hang on. - Franklin D. Roosevelt",
  "Always remember that you are absolutely unique. Just like everyone else. - Margaret Mead",
  "The future belongs to those who believe in the beauty of their dreams. - Eleanor Roosevelt"
]

export default function QuoteOfTheDay() {
  const [currentQuote, setCurrentQuote] = useState<string>(quotes[Math.floor(Math.random() * quotes.length)])
  const [favorites, setFavorites] = useState<string[]>(() => {
    const savedFavorites = localStorage.getItem('favorites')
    return savedFavorites ? JSON.parse(savedFavorites) : []
  })

  useEffect(() => {
    localStorage.setItem('favorites', JSON.stringify(favorites))
  }, [favorites])

  const getRandomQuote = () => {
    const randomIndex = Math.floor(Math.random() * quotes.length)
    setCurrentQuote(quotes[randomIndex])
  }

  const toggleFavorite = (quote: string) => {
    if (favorites.includes(quote)) {
      setFavorites(favorites.filter(fav => fav !== quote))
    } else {
      setFavorites([...favorites, quote])
    }
  }

  const isFavorite = (quote: string) => favorites.includes(quote)

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-blue-100 to-white p-4">
      <Card className="w-full max-w-md bg-white shadow-lg rounded-lg overflow-hidden">
        <CardHeader className="bg-blue-500 text-white">
          <CardTitle className="text-2xl font-bold">Quote of the Day</CardTitle>
        </CardHeader>
        <CardContent className="text-center p-6">
          <p className="text-lg mb-4 text-gray-800">{currentQuote}</p>
          <div className="flex justify-center space-x-4">
            <Button onClick={getRandomQuote} variant="outline" className="bg-blue-500 text-white hover:bg-blue-600">
              <ArrowRight className="mr-2 h-4 w-4" /> New Quote
            </Button>
            <Button onClick={() => toggleFavorite(currentQuote)} variant={isFavorite(currentQuote) ? 'secondary' : 'outline'} className="bg-green-500 text-white hover:bg-green-600">
              <Heart className="mr-2 h-4 w-4" /> {isFavorite(currentQuote) ? 'Unfavorite' : 'Favorite'}
            </Button>
          </div>
        </CardContent>
      </Card>

      {favorites.length > 0 && (
        <div className="mt-8 w-full max-w-md">
          <Card className="bg-white shadow-lg rounded-lg overflow-hidden">
            <CardHeader className="bg-blue-500 text-white">
              <CardTitle className="text-2xl font-bold">Favorite Quotes</CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <ul className="space-y-2">
                {favorites.map((quote, index) => (
                  <li key={index} className="flex items-center justify-between bg-gray-100 p-2 rounded-lg">
                    <p className="text-lg text-gray-800">{quote}</p>
                    <Button onClick={() => toggleFavorite(quote)} variant="destructive" size="icon" className="bg-red-500 hover:bg-red-600">
                      <X className="h-4 w-4" />
                    </Button>
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  )
}
