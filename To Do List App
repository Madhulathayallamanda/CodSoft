import { useState, useEffect } from 'react'
import { Button } from "/components/ui/button"
import { Input } from "/components/ui/input"
import { Checkbox } from "/components/ui/checkbox"
import { Trash } from "lucide-react"

type Task = {
  id: number
  description: string
  completed: boolean
}

export default function TodoList() {
  const [tasks, setTasks] = useState<Task[]>([])
  const [taskDescription, setTaskDescription] = useState('')

  useEffect(() => {
    const storedTasks = localStorage.getItem('tasks')
    if (storedTasks) {
      setTasks(JSON.parse(storedTasks))
    }
  }, [])

  useEffect(() => {
    localStorage.setItem('tasks', JSON.stringify(tasks))
  }, [tasks])

  const addTask = () => {
    if (taskDescription.trim()) {
      const newTask: Task = {
        id: Date.now(),
        description: taskDescription,
        completed: false,
      }
      setTasks([...tasks, newTask])
      setTaskDescription('')
    }
  }

  const toggleTaskCompletion = (id: number) => {
    setTasks(tasks.map(task => 
      task.id === id ? { ...task, completed: !task.completed } : task
    ))
  }

  const deleteTask = (id: number) => {
    setTasks(tasks.filter(task => task.id !== id))
  }

  return (
    <div className="flex flex-col items-center min-h-screen bg-black p-4 text-white">
      <header className="mb-8">
        <h1 className="text-3xl font-bold text-blue-400">To-Do List</h1>
      </header>
      <main className="w-full max-w-2xl">
        <div className="flex items-center mb-4">
          <Input
            className="w-full mr-2 bg-gray-800 border-gray-700 text-white focus:border-blue-500 focus:ring-blue-500"
            placeholder="Add a new task"
            value={taskDescription}
            onChange={(e) => setTaskDescription(e.target.value)}
          />
          <Button className="bg-blue-600 hover:bg-blue-700 text-white" onClick={addTask}>Add</Button>
        </div>
        <ul className="space-y-2">
          {tasks.map(task => (
            <li key={task.id} className="flex items-center justify-between p-2 bg-gray-800 rounded shadow-md">
              <div className="flex items-center">
                <Checkbox
                  id={`task-${task.id}`}
                  checked={task.completed}
                  onCheckedChange={() => toggleTaskCompletion(task.id)}
                  className="bg-gray-800 border-gray-700 text-white focus:border-blue-500 focus:ring-blue-500"
                />
                <label
                  htmlFor={`task-${task.id}`}
                  className={`ml-2 ${task.completed ? 'line-through text-gray-400' : 'text-white'}`}
                >
                  {task.description}
                </label>
              </div>
              <Button variant="destructive" className="bg-red-600 hover:bg-red-700 text-white" onClick={() => deleteTask(task.id)}>
                <Trash className="w-4 h-4" />
              </Button>
            </li>
          ))}
        </ul>
      </main>
    </div>
  )
}
